name: Build WSA

on:
  workflow_dispatch:
    inputs:
      architecture:
        description: "CPU architecture"
        required: true
        default: x64
        type: choice
        options:
          - x64
          - arm64

      release_type:
        description: "WSA release type"
        required: true
        default: RP
        type: choice
        options:
          - retail
          - RP
          - WIS
          - WIF

      magisk_version:
        description: "Magisk channel"
        required: true
        default: stable
        type: choice
        options:
          - stable
          - beta
          - canary
          - debug

      google_apps_brand:
        description: "Google apps distribution"
        required: true
        default: MindTheGapps
        type: choice
        options:
          - none
          - MindTheGapps
          - OpenGApps

      google_apps_variant:
        description: "Google apps variant"
        required: true
        default: pico
        type: choice
        options:
          - pico

      remove_amazon:
        description: "Remove Amazon AppStore"
        required: true
        default: "keep"
        type: choice
        options:
        - keep
        - remove

      root_solution:
        description: "Root solution"
        required: true
        default: magisk
        type: choice
        options:
          - magisk
          - none

env:
  WSA_BUILD_ARCHITECTURE: ${{ inputs.architecture }}
  WSA_BUILD_RELEASE_TYPE: ${{ inputs.release_type }}
  WSA_BUILD_MAGISK_VERSION: ${{ inputs.magisk_version }}
  WSA_BUILD_GOOGLE_APPS_BRAND: ${{ inputs.google_apps_brand }}
  WSA_BUILD_GOOGLE_APPS_VARIANT: ${{ inputs.google_apps_variant }}
  WSA_BUILD_REMOVE_AMAZON: ${{ inputs.remove_amazon }}
  WSA_BUILD_ROOT_SOLUTION: ${{ inputs.root_solution }}

jobs:
  build-magisk-on-wsa:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # - name: Open reverse SSH
      #   run: bash ./github_actions_reverse_ssh.sh

      - name: Updating package manager cache
        run: sudo apt update -y && sudo apt upgrade -y

      - name: Installing dependencies
        run: sudo bash ./scripts/install_deps.sh

      - name: Patching Magisk on WSA building script
        run: |
          echo "Yay, the upstream devs have fixed this :)"
      - name: Building Magisk on WSA
        run: bash ./scripts/build.sh --arch $WSA_BUILD_ARCHITECTURE --release-type $WSA_BUILD_RELEASE_TYPE --magisk-ver $WSA_BUILD_MAGISK_VERSION --gapps-brand $WSA_BUILD_GOOGLE_APPS_BRAND --gapps-variant $WSA_BUILD_GOOGLE_APPS_VARIANT --remove-amazon $WSA_BUILD_REMOVE_AMAZON --root-sol $WSA_BUILD_ROOT_SOLUTION
      - name: Remove Amazon AppStore
        if: ${{ github.event.inputs.remove_amazon == 'remove' }}
        run: |
          find system/product/{etc/permissions,etc/sysconfig,framework,priv-app} | grep -e amazon -e venezia | sudo xargs rm -rf

      - name: Archiving and compressing artifact
        run: |
          cd ./output
          tar -I "xz -T$(nproc) -9" -cvf ../MagiskOnWSA.tar.xz .
          cd ../..
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: MagiskOnWSA.tar.xz
          path: ./MagiskOnWSA.tar.xz

  build-magisk-on-wsa-10:
    needs:
      - build-magisk-on-wsa
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Extracing files
        run: |
          cd artifacts
          for name in *;
          do
              mv $name/$name ../$name;
              rmdir $name
              mv ../$name ./
          done;
          tar -xJvf WSAPatch.tar.xz
          rm WSAPatch.tar.xz
          tar -xJvf MagiskOnWSA.tar.xz
          rm MagiskOnWSA.tar.xz
          cd ..
      - name: Applying patch for Windows 10
        run: |
          cd artifacts
          mv *.dll */WsaClient/
          patch --binary */AppxManifest.xml ../wsa_windows_10.patch
          cd ..
      - name: Archiving and compressing artifact
        run: |
          cd artifacts
          tar -I "xz -T$(nproc) -9" -cvf ../MagiskOnWSA10.tar.xz .
          cd ..
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: MagiskOnWSA10.tar.xz
          path: MagiskOnWSA10.tar.xz
